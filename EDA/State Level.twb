<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0313.2002                               -->
<workbook original-version='18.1' source-build='2025.1.0 (20251.25.0313.2002)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <DatagraphCoreV1 />
    <_.fcp.DatagraphNodeAxisTitle.true...DatagraphNodeAxisTitle />
    <DatagraphNodeSingleValueFieldV1 />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SavingAnalyticObjects />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='StateLevel_17452956951960' path='/workbooks' revision='1.1' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Value' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Insurance Cost&quot;'>
        <calculation class='tableau' formula='&quot;Insurance Cost&quot;' />
        <members>
          <member value='&quot;GDP&quot;' />
          <member value='&quot;Per Capita GDP&quot;' />
          <member value='&quot;AQI&quot;' />
          <member value='&quot;Insurance Cost&quot;' />
        </members>
      </column>
      <column caption='Select Level' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Region&quot;'>
        <calculation class='tableau' formula='&quot;Region&quot;' />
        <members>
          <member value='&quot;State&quot;' />
          <member value='&quot;Region&quot;' />
        </members>
      </column>
      <column caption='Select Metric' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Insurance Cost&quot;'>
        <calculation class='tableau' formula='&quot;Insurance Cost&quot;' />
        <members>
          <member value='&quot;GDP&quot;' />
          <member value='&quot;Per Capita GDP&quot;' />
          <member value='&quot;AQI&quot;' />
          <member value='&quot;Insurance Cost&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='State_GDP__Population__Per_Capita_GDP__AQI__and_Insurance_Cost' inline='true' name='federated.0xy54ma1y3vn6110mfa6x0qt4i3z' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='State_GDP__Population__Per_Capita_GDP__AQI__and_Insurance_Cost' name='textscan.19lqfy40gbl6q8170c5ig0j8bnxq'>
            <connection class='textscan' directory='C:/Users/ROG/Desktop' filename='State_GDP__Population__Per_Capita_GDP__AQI__and_Insurance_Cost.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.19lqfy40gbl6q8170c5ig0j8bnxq' name='State_GDP__Population__Per_Capita_GDP__AQI__and_Insurance_Cost.csv' table='[State_GDP__Population__Per_Capita_GDP__AQI__and_Insurance_Cost#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='real' name='GDP (in billions USD)' ordinal='1' />
            <column datatype='integer' name='Population_2024' ordinal='2' />
            <column datatype='real' name='Per_Capita_GDP_USD' ordinal='3' />
            <column datatype='real' name='AQI_Score' ordinal='4' />
            <column datatype='integer' name='Insurance_Cost_Monthly_USD' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[State_GDP__Population__Per_Capita_GDP__AQI__and_Insurance_Cost.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â¥&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;zh_CN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[State_GDP__Population__Per_Capita_GDP__AQI__and_Insurance_Cost.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
            <object-id>[State_GDP__Population__Per_Capita_GDP__AQI__and_Insurance_Cost.csv_FFEBA8EEB6D143CBB1F9AB2FAEA0FC90]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP (in billions USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP (in billions USD)]</local-name>
            <parent-name>[State_GDP__Population__Per_Capita_GDP__AQI__and_Insurance_Cost.csv]</parent-name>
            <remote-alias>GDP (in billions USD)</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[State_GDP__Population__Per_Capita_GDP__AQI__and_Insurance_Cost.csv_FFEBA8EEB6D143CBB1F9AB2FAEA0FC90]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population_2024</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population_2024]</local-name>
            <parent-name>[State_GDP__Population__Per_Capita_GDP__AQI__and_Insurance_Cost.csv]</parent-name>
            <remote-alias>Population_2024</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[State_GDP__Population__Per_Capita_GDP__AQI__and_Insurance_Cost.csv_FFEBA8EEB6D143CBB1F9AB2FAEA0FC90]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Per_Capita_GDP_USD</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Per_Capita_GDP_USD]</local-name>
            <parent-name>[State_GDP__Population__Per_Capita_GDP__AQI__and_Insurance_Cost.csv]</parent-name>
            <remote-alias>Per_Capita_GDP_USD</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[State_GDP__Population__Per_Capita_GDP__AQI__and_Insurance_Cost.csv_FFEBA8EEB6D143CBB1F9AB2FAEA0FC90]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AQI_Score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AQI_Score]</local-name>
            <parent-name>[State_GDP__Population__Per_Capita_GDP__AQI__and_Insurance_Cost.csv]</parent-name>
            <remote-alias>AQI_Score</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[State_GDP__Population__Per_Capita_GDP__AQI__and_Insurance_Cost.csv_FFEBA8EEB6D143CBB1F9AB2FAEA0FC90]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Insurance_Cost_Monthly_USD</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Insurance_Cost_Monthly_USD]</local-name>
            <parent-name>[State_GDP__Population__Per_Capita_GDP__AQI__and_Insurance_Cost.csv]</parent-name>
            <remote-alias>Insurance_Cost_Monthly_USD</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[State_GDP__Population__Per_Capita_GDP__AQI__and_Insurance_Cost.csv_FFEBA8EEB6D143CBB1F9AB2FAEA0FC90]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='AQI Score' datatype='real' name='[AQI_Score]' role='measure' type='quantitative' />
      <column caption='Metric Value' datatype='real' name='[Calculation_-6271262479191019510]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#13;&#10; WHEN &quot;GDP&quot;            THEN [GDP (in billions USD)]&#13;&#10; WHEN &quot;Per Capita GDP&quot; THEN [Per_Capita_GDP_USD]&#13;&#10; WHEN &quot;AQI&quot;            THEN [AQI_Score]&#13;&#10; WHEN &quot;Insurance Cost&quot; THEN [Insurance_Cost_Monthly_USD]&#13;&#10;END' />
      </column>
      <column caption='DIM' datatype='string' default-role='measure' default-type='quantitative' name='[Calculation_-6271262479191150583]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10; WHEN &quot;State&quot;  THEN [State]&#13;&#10; WHEN &quot;Region&quot; THEN [Calculation_-6271262479191449593]&#13;&#10;END' />
      </column>
      <column caption='Region' datatype='string' name='[Calculation_-6271262479191449593]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='// è®¡ç®å­æ®µåç§°ï¼Region&#13;&#10;CASE [State]&#13;&#10;  // æ°è±æ ¼å° New England&#13;&#10;  WHEN &quot;Connecticut&quot;    THEN &quot;New England&quot;&#13;&#10;  WHEN &quot;Maine&quot;          THEN &quot;New England&quot;&#13;&#10;  WHEN &quot;Massachusetts&quot;  THEN &quot;New England&quot;&#13;&#10;  WHEN &quot;New Hampshire&quot;  THEN &quot;New England&quot;&#13;&#10;  WHEN &quot;Rhode Island&quot;   THEN &quot;New England&quot;&#13;&#10;  WHEN &quot;Vermont&quot;        THEN &quot;New England&quot;&#13;&#10;&#13;&#10;  // ä¸­å¤§è¥¿æ´ Mideast&#13;&#10;  WHEN &quot;Delaware&quot;               THEN &quot;Mideast&quot;&#13;&#10;  WHEN &quot;District of Columbia&quot;   THEN &quot;Mideast&quot;&#13;&#10;  WHEN &quot;Maryland&quot;               THEN &quot;Mideast&quot;&#13;&#10;  WHEN &quot;New Jersey&quot;             THEN &quot;Mideast&quot;&#13;&#10;  WHEN &quot;New York&quot;               THEN &quot;Mideast&quot;&#13;&#10;  WHEN &quot;Pennsylvania&quot;           THEN &quot;Mideast&quot;&#13;&#10;&#13;&#10;  // ä¿äº¥ä¿æ²³-äºå¤§æ¹ Great Lakes&#13;&#10;  WHEN &quot;Illinois&quot;   THEN &quot;Great Lakes&quot;&#13;&#10;  WHEN &quot;Indiana&quot;    THEN &quot;Great Lakes&quot;&#13;&#10;  WHEN &quot;Michigan&quot;   THEN &quot;Great Lakes&quot;&#13;&#10;  WHEN &quot;Ohio&quot;       THEN &quot;Great Lakes&quot;&#13;&#10;  WHEN &quot;Wisconsin&quot;  THEN &quot;Great Lakes&quot;&#13;&#10;&#13;&#10;  // å¹³å Plains&#13;&#10;  WHEN &quot;Iowa&quot;          THEN &quot;Plains&quot;&#13;&#10;  WHEN &quot;Kansas&quot;        THEN &quot;Plains&quot;&#13;&#10;  WHEN &quot;Minnesota&quot;     THEN &quot;Plains&quot;&#13;&#10;  WHEN &quot;Missouri&quot;      THEN &quot;Plains&quot;&#13;&#10;  WHEN &quot;Nebraska&quot;      THEN &quot;Plains&quot;&#13;&#10;  WHEN &quot;North Dakota&quot;  THEN &quot;Plains&quot;&#13;&#10;  WHEN &quot;South Dakota&quot;  THEN &quot;Plains&quot;&#13;&#10;&#13;&#10;  // ä¸å Southeast&#13;&#10;  WHEN &quot;Alabama&quot;         THEN &quot;Southeast&quot;&#13;&#10;  WHEN &quot;Arkansas&quot;        THEN &quot;Southeast&quot;&#13;&#10;  WHEN &quot;Florida&quot;         THEN &quot;Southeast&quot;&#13;&#10;  WHEN &quot;Georgia&quot;         THEN &quot;Southeast&quot;&#13;&#10;  WHEN &quot;Kentucky&quot;        THEN &quot;Southeast&quot;&#13;&#10;  WHEN &quot;Louisiana&quot;       THEN &quot;Southeast&quot;&#13;&#10;  WHEN &quot;Mississippi&quot;     THEN &quot;Southeast&quot;&#13;&#10;  WHEN &quot;North Carolina&quot;  THEN &quot;Southeast&quot;&#13;&#10;  WHEN &quot;South Carolina&quot;  THEN &quot;Southeast&quot;&#13;&#10;  WHEN &quot;Tennessee&quot;       THEN &quot;Southeast&quot;&#13;&#10;  WHEN &quot;Virginia&quot;        THEN &quot;Southeast&quot;&#13;&#10;  WHEN &quot;West Virginia&quot;   THEN &quot;Southeast&quot;&#13;&#10;&#13;&#10;  // è¥¿å Southwest&#13;&#10;  WHEN &quot;Arizona&quot;     THEN &quot;Southwest&quot;&#13;&#10;  WHEN &quot;New Mexico&quot;  THEN &quot;Southwest&quot;&#13;&#10;  WHEN &quot;Oklahoma&quot;    THEN &quot;Southwest&quot;&#13;&#10;  WHEN &quot;Texas&quot;       THEN &quot;Southwest&quot;&#13;&#10;&#13;&#10;  // è½åºå±± Rocky Mountain&#13;&#10;  WHEN &quot;Colorado&quot;   THEN &quot;Rocky Mountain&quot;&#13;&#10;  WHEN &quot;Idaho&quot;      THEN &quot;Rocky Mountain&quot;&#13;&#10;  WHEN &quot;Montana&quot;    THEN &quot;Rocky Mountain&quot;&#13;&#10;  WHEN &quot;Utah&quot;       THEN &quot;Rocky Mountain&quot;&#13;&#10;  WHEN &quot;Wyoming&quot;    THEN &quot;Rocky Mountain&quot;&#13;&#10;&#13;&#10;  // è¿è¥¿ Far West&#13;&#10;  WHEN &quot;Alaska&quot;       THEN &quot;Far West&quot;&#13;&#10;  WHEN &quot;California&quot;   THEN &quot;Far West&quot;&#13;&#10;  WHEN &quot;Hawaii&quot;       THEN &quot;Far West&quot;&#13;&#10;  WHEN &quot;Nevada&quot;       THEN &quot;Far West&quot;&#13;&#10;  WHEN &quot;Oregon&quot;       THEN &quot;Far West&quot;&#13;&#10;  WHEN &quot;Washington&quot;   THEN &quot;Far West&quot;&#13;&#10;&#13;&#10;  ELSE &quot;Unknown&quot;&#13;&#10;END' />
      </column>
      <column caption='Calculation2' datatype='string' name='[Calculation_-6271262479209385983]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF INDEX() &lt;= 2 THEN&#13;&#10;  &quot;Top 2&quot;&#13;&#10;ELSEIF INDEX() &gt; SIZE() - 2 THEN&#13;&#10;  &quot;Bottom 2&quot;&#13;&#10;ELSE&#13;&#10;  &quot;Other&quot;&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Value' datatype='real' default-format='N' name='[Calculation_-6271262479212281856]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;  WHEN &quot;GDP&quot;            THEN [GDP (in billions USD)]&#13;&#10;  WHEN &quot;Per Capita GDP&quot; THEN [Per_Capita_GDP_USD]&#13;&#10;  WHEN &quot;AQI&quot;            THEN [AQI_Score]&#13;&#10;  WHEN &quot;Insurance Cost&quot; THEN [Insurance_Cost_Monthly_USD]&#13;&#10;END' />
      </column>
      <column caption='Insurance Cost Monthly USD' datatype='integer' name='[Insurance_Cost_Monthly_USD]' role='measure' type='quantitative' />
      <column caption='Per Capita GDP USD' datatype='real' name='[Per_Capita_GDP_USD]' role='measure' type='quantitative' />
      <column caption='Population 2024' datatype='integer' name='[Population_2024]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State_GDP__Population__Per_Capita_GDP__AQI__and_Insurance_Cost.csv' datatype='table' name='[__tableau_internal_object_id__].[State_GDP__Population__Per_Capita_GDP__AQI__and_Insurance_Cost.csv_FFEBA8EEB6D143CBB1F9AB2FAEA0FC90]' role='measure' type='quantitative' />
      <column-instance column='[AQI_Score]' derivation='Sum' name='[sum:AQI_Score:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Per_Capita_GDP_USD]' derivation='Sum' name='[sum:Per_Capita_GDP_USD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_-6271262479209385983]' derivation='User' name='[usr:Calculation_-6271262479209385983:nk:1]' pivot='key' type='nominal'>
        <table-calc ordering-type='Columns' />
      </column-instance>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/ROG/Desktop/State_GDP__Population__Per_Capita_GDP__AQI__and_Insurance_Cost.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='04/22/2025 04:21:08 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='State_GDP__Population__Per_Capita_GDP__AQI__and_Insurance_Cost' increment-value='%null%' refresh-type='create' rows-inserted='50' timestamp-start='2025-04-22 04:21:07.832' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>0</ordinal>
              <family>State_GDP__Population__Per_Capita_GDP__AQI__and_Insurance_Cost.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>50</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LZH_RCN' />
              <object-id>[State_GDP__Population__Per_Capita_GDP__AQI__and_Insurance_Cost.csv_FFEBA8EEB6D143CBB1F9AB2FAEA0FC90]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GDP (in billions USD)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[GDP (in billions USD)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GDP (in billions USD)</remote-alias>
              <ordinal>1</ordinal>
              <family>State_GDP__Population__Per_Capita_GDP__AQI__and_Insurance_Cost.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>true</contains-null>
              <object-id>[State_GDP__Population__Per_Capita_GDP__AQI__and_Insurance_Cost.csv_FFEBA8EEB6D143CBB1F9AB2FAEA0FC90]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population_2024</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population_2024]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population_2024</remote-alias>
              <ordinal>2</ordinal>
              <family>State_GDP__Population__Per_Capita_GDP__AQI__and_Insurance_Cost.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>true</contains-null>
              <object-id>[State_GDP__Population__Per_Capita_GDP__AQI__and_Insurance_Cost.csv_FFEBA8EEB6D143CBB1F9AB2FAEA0FC90]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Per_Capita_GDP_USD</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Per_Capita_GDP_USD]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Per_Capita_GDP_USD</remote-alias>
              <ordinal>3</ordinal>
              <family>State_GDP__Population__Per_Capita_GDP__AQI__and_Insurance_Cost.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>true</contains-null>
              <object-id>[State_GDP__Population__Per_Capita_GDP__AQI__and_Insurance_Cost.csv_FFEBA8EEB6D143CBB1F9AB2FAEA0FC90]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AQI_Score</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AQI_Score]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AQI_Score</remote-alias>
              <ordinal>4</ordinal>
              <family>State_GDP__Population__Per_Capita_GDP__AQI__and_Insurance_Cost.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>32</approx-count>
              <contains-null>true</contains-null>
              <object-id>[State_GDP__Population__Per_Capita_GDP__AQI__and_Insurance_Cost.csv_FFEBA8EEB6D143CBB1F9AB2FAEA0FC90]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Insurance_Cost_Monthly_USD</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Insurance_Cost_Monthly_USD]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Insurance_Cost_Monthly_USD</remote-alias>
              <ordinal>5</ordinal>
              <family>State_GDP__Population__Per_Capita_GDP__AQI__and_Insurance_Cost.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>44</approx-count>
              <contains-null>true</contains-null>
              <object-id>[State_GDP__Population__Per_Capita_GDP__AQI__and_Insurance_Cost.csv_FFEBA8EEB6D143CBB1F9AB2FAEA0FC90]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[usr:Calculation_-6271262479209385983:nk:1]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bottom 5&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Top 2&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Top 5&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bottom 2&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[:Measure Names]' direction='ASC'>
          <dictionary>
            <bucket>&quot;[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[sum:AQI_Score:qk]&quot;</bucket>
            <bucket>&quot;[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[__tableau_internal_object_id__].[cnt:State_GDP__Population__Per_Capita_GDP__AQI__and_Insurance_Cost.csv_FFEBA8EEB6D143CBB1F9AB2FAEA0FC90:qk]&quot;</bucket>
            <bucket>&quot;[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[sum:GDP (in billions USD):qk]&quot;</bucket>
            <bucket>&quot;[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[sum:Insurance_Cost_Monthly_USD:qk]&quot;</bucket>
            <bucket>&quot;[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[sum:Per_Capita_GDP_USD:qk]&quot;</bucket>
            <bucket>&quot;[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[sum:Population_2024:qk]&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Value' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Insurance Cost&quot;'>
          <calculation class='tableau' formula='&quot;Insurance Cost&quot;' />
        </column>
        <column caption='Select Level' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Region&quot;'>
          <calculation class='tableau' formula='&quot;Region&quot;' />
        </column>
        <column caption='Select Metric' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Insurance Cost&quot;'>
          <calculation class='tableau' formula='&quot;Insurance Cost&quot;' />
        </column>
      </datasource-dependencies>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{3d1b4856-82f7-4164-bbd3-4bace0d81094}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[sum:AQI_Score:qk]' />
            <field name='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[sum:Per_Capita_GDP_USD:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <object-graph>
        <objects>
          <object caption='State_GDP__Population__Per_Capita_GDP__AQI__and_Insurance_Cost.csv' id='State_GDP__Population__Per_Capita_GDP__AQI__and_Insurance_Cost.csv_FFEBA8EEB6D143CBB1F9AB2FAEA0FC90'>
            <properties context=''>
              <relation connection='textscan.19lqfy40gbl6q8170c5ig0j8bnxq' name='State_GDP__Population__Per_Capita_GDP__AQI__and_Insurance_Cost.csv' table='[State_GDP__Population__Per_Capita_GDP__AQI__and_Insurance_Cost#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
                  <column datatype='string' name='State' ordinal='0' />
                  <column datatype='real' name='GDP (in billions USD)' ordinal='1' />
                  <column datatype='integer' name='Population_2024' ordinal='2' />
                  <column datatype='real' name='Per_Capita_GDP_USD' ordinal='3' />
                  <column datatype='real' name='AQI_Score' ordinal='4' />
                  <column datatype='integer' name='Insurance_Cost_Monthly_USD' ordinal='5' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='AQI vs Cap'>
      <table>
        <view>
          <datasources>
            <datasource caption='State_GDP__Population__Per_Capita_GDP__AQI__and_Insurance_Cost' name='federated.0xy54ma1y3vn6110mfa6x0qt4i3z' />
          </datasources>
          <datasource-dependencies datasource='federated.0xy54ma1y3vn6110mfa6x0qt4i3z'>
            <column caption='AQI Score' datatype='real' name='[AQI_Score]' role='measure' type='quantitative' />
            <column auto-hidden='true' caption='Clusters' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:1]' parent-model='[AnalyticModel:{3d1b4856-82f7-4164-bbd3-4bace0d81094}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column caption='Per Capita GDP USD' datatype='real' name='[Per_Capita_GDP_USD]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[AdhocCluster:1]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[AQI_Score]' derivation='Sum' name='[sum:AQI_Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Per_Capita_GDP_USD]' derivation='Sum' name='[sum:Per_Capita_GDP_USD:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[sum:AQI_Score:qk]' value='18' />
            <format attr='font-size' field='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[sum:Per_Capita_GDP_USD:qk]' value='18' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[none:AdhocCluster:1:ok]' />
              <lod column='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[none:State:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[sum:AQI_Score:qk]</rows>
        <cols>[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[sum:Per_Capita_GDP_USD:qk]</cols>
      </table>
      <simple-id uuid='{20AAA891-988C-4877-9947-01449DC8D4FA}' />
    </worksheet>
    <worksheet name='In vs Cap'>
      <table>
        <view>
          <datasources>
            <datasource caption='State_GDP__Population__Per_Capita_GDP__AQI__and_Insurance_Cost' name='federated.0xy54ma1y3vn6110mfa6x0qt4i3z' />
          </datasources>
          <datasource-dependencies datasource='federated.0xy54ma1y3vn6110mfa6x0qt4i3z'>
            <column caption='Insurance Cost Monthly USD' datatype='integer' name='[Insurance_Cost_Monthly_USD]' role='measure' type='quantitative' />
            <column caption='Per Capita GDP USD' datatype='real' name='[Per_Capita_GDP_USD]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Insurance_Cost_Monthly_USD]' derivation='Sum' name='[sum:Insurance_Cost_Monthly_USD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Per_Capita_GDP_USD]' derivation='Sum' name='[sum:Per_Capita_GDP_USD:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[sum:Insurance_Cost_Monthly_USD:qk]' value='18' />
            <format attr='font-size' field='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[sum:Per_Capita_GDP_USD:qk]' value='18' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[none:State:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[sum:Insurance_Cost_Monthly_USD:qk]</rows>
        <cols>[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[sum:Per_Capita_GDP_USD:qk]</cols>
      </table>
      <simple-id uuid='{30826684-B6DB-4B2B-AA89-DD293D4BE320}' />
    </worksheet>
    <worksheet name='Overview'>
      <layout-options>
        <title>
          <formatted-text>
            <run>State Level</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='State_GDP__Population__Per_Capita_GDP__AQI__and_Insurance_Cost' name='federated.0xy54ma1y3vn6110mfa6x0qt4i3z' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Value' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Insurance Cost&quot;'>
              <calculation class='tableau' formula='&quot;Insurance Cost&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0xy54ma1y3vn6110mfa6x0qt4i3z'>
            <column caption='AQI Score' datatype='real' name='[AQI_Score]' role='measure' type='quantitative' />
            <column caption='Calculation2' datatype='string' name='[Calculation_-6271262479209385983]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF INDEX() &lt;= 2 THEN&#13;&#10;  &quot;Top 2&quot;&#13;&#10;ELSEIF INDEX() &gt; SIZE() - 2 THEN&#13;&#10;  &quot;Bottom 2&quot;&#13;&#10;ELSE&#13;&#10;  &quot;Other&quot;&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Value' datatype='real' default-format='N' name='[Calculation_-6271262479212281856]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;  WHEN &quot;GDP&quot;            THEN [GDP (in billions USD)]&#13;&#10;  WHEN &quot;Per Capita GDP&quot; THEN [Per_Capita_GDP_USD]&#13;&#10;  WHEN &quot;AQI&quot;            THEN [AQI_Score]&#13;&#10;  WHEN &quot;Insurance Cost&quot; THEN [Insurance_Cost_Monthly_USD]&#13;&#10;END' />
            </column>
            <column datatype='real' name='[GDP (in billions USD)]' role='measure' type='quantitative' />
            <column caption='Insurance Cost Monthly USD' datatype='integer' name='[Insurance_Cost_Monthly_USD]' role='measure' type='quantitative' />
            <column caption='Per Capita GDP USD' datatype='real' name='[Per_Capita_GDP_USD]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[AQI_Score]' derivation='Sum' name='[sum:AQI_Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_-6271262479212281856]' derivation='Sum' name='[sum:Calculation_-6271262479212281856:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_-6271262479209385983]' derivation='User' name='[usr:Calculation_-6271262479209385983:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[sum:AQI_Score:qk]&quot;' user:op='manual' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[none:State:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[sum:Calculation_-6271262479212281856:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[sum:Calculation_-6271262479212281856:qk]' scope='cols' value='Insurance Cost' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-size' field='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[none:State:nk]' value='20' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[none:State:nk]' value='216' />
            <format attr='height-header' value='44' />
            <format attr='font-size' data-class='subtotal' field='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[none:State:nk]' value='20' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='18' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[sum:Calculation_-6271262479212281856:qk]' value='20' />
            <format attr='font-weight' field='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[none:State:nk]' value='bold' />
            <format attr='font-weight' field='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[sum:Calculation_-6271262479212281856:qk]' value='bold' />
            <format attr='font-size' field='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[none:State:nk]' value='18' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-size' id='refline0' value='4' />
            <format attr='stroke-color' id='refline0' value='#b07aa1a7' />
            <format attr='font-size' id='refline0' value='20' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='16' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='20' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[sum:Calculation_-6271262479212281856:qk]' value='20' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[usr:Calculation_-6271262479209385983:nk:1]' />
              <lod column='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[sum:Calculation_-6271262479212281856:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[sum:Calculation_-6271262479212281856:qk]' enable-instant-analytics='false' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[sum:Calculation_-6271262479212281856:qk]' z-order='1' />
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='16' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[none:State:nk]</rows>
        <cols>[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[sum:Calculation_-6271262479212281856:qk]</cols>
      </table>
      <simple-id uuid='{DB51ED47-22D6-45DA-B05E-4237B57F14F8}' />
    </worksheet>
    <worksheet name='Overview (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>State Level</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='State_GDP__Population__Per_Capita_GDP__AQI__and_Insurance_Cost' name='federated.0xy54ma1y3vn6110mfa6x0qt4i3z' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Level' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Region&quot;'>
              <calculation class='tableau' formula='&quot;Region&quot;' />
            </column>
            <column caption='Select Metric' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Insurance Cost&quot;'>
              <calculation class='tableau' formula='&quot;Insurance Cost&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0xy54ma1y3vn6110mfa6x0qt4i3z'>
            <column caption='AQI Score' datatype='real' name='[AQI_Score]' role='measure' type='quantitative' />
            <column caption='Metric Value' datatype='real' name='[Calculation_-6271262479191019510]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#13;&#10; WHEN &quot;GDP&quot;            THEN [GDP (in billions USD)]&#13;&#10; WHEN &quot;Per Capita GDP&quot; THEN [Per_Capita_GDP_USD]&#13;&#10; WHEN &quot;AQI&quot;            THEN [AQI_Score]&#13;&#10; WHEN &quot;Insurance Cost&quot; THEN [Insurance_Cost_Monthly_USD]&#13;&#10;END' />
            </column>
            <column caption='DIM' datatype='string' default-role='measure' default-type='quantitative' name='[Calculation_-6271262479191150583]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10; WHEN &quot;State&quot;  THEN [State]&#13;&#10; WHEN &quot;Region&quot; THEN [Calculation_-6271262479191449593]&#13;&#10;END' />
            </column>
            <column caption='Region' datatype='string' name='[Calculation_-6271262479191449593]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// è®¡ç®å­æ®µåç§°ï¼Region&#13;&#10;CASE [State]&#13;&#10;  // æ°è±æ ¼å° New England&#13;&#10;  WHEN &quot;Connecticut&quot;    THEN &quot;New England&quot;&#13;&#10;  WHEN &quot;Maine&quot;          THEN &quot;New England&quot;&#13;&#10;  WHEN &quot;Massachusetts&quot;  THEN &quot;New England&quot;&#13;&#10;  WHEN &quot;New Hampshire&quot;  THEN &quot;New England&quot;&#13;&#10;  WHEN &quot;Rhode Island&quot;   THEN &quot;New England&quot;&#13;&#10;  WHEN &quot;Vermont&quot;        THEN &quot;New England&quot;&#13;&#10;&#13;&#10;  // ä¸­å¤§è¥¿æ´ Mideast&#13;&#10;  WHEN &quot;Delaware&quot;               THEN &quot;Mideast&quot;&#13;&#10;  WHEN &quot;District of Columbia&quot;   THEN &quot;Mideast&quot;&#13;&#10;  WHEN &quot;Maryland&quot;               THEN &quot;Mideast&quot;&#13;&#10;  WHEN &quot;New Jersey&quot;             THEN &quot;Mideast&quot;&#13;&#10;  WHEN &quot;New York&quot;               THEN &quot;Mideast&quot;&#13;&#10;  WHEN &quot;Pennsylvania&quot;           THEN &quot;Mideast&quot;&#13;&#10;&#13;&#10;  // ä¿äº¥ä¿æ²³-äºå¤§æ¹ Great Lakes&#13;&#10;  WHEN &quot;Illinois&quot;   THEN &quot;Great Lakes&quot;&#13;&#10;  WHEN &quot;Indiana&quot;    THEN &quot;Great Lakes&quot;&#13;&#10;  WHEN &quot;Michigan&quot;   THEN &quot;Great Lakes&quot;&#13;&#10;  WHEN &quot;Ohio&quot;       THEN &quot;Great Lakes&quot;&#13;&#10;  WHEN &quot;Wisconsin&quot;  THEN &quot;Great Lakes&quot;&#13;&#10;&#13;&#10;  // å¹³å Plains&#13;&#10;  WHEN &quot;Iowa&quot;          THEN &quot;Plains&quot;&#13;&#10;  WHEN &quot;Kansas&quot;        THEN &quot;Plains&quot;&#13;&#10;  WHEN &quot;Minnesota&quot;     THEN &quot;Plains&quot;&#13;&#10;  WHEN &quot;Missouri&quot;      THEN &quot;Plains&quot;&#13;&#10;  WHEN &quot;Nebraska&quot;      THEN &quot;Plains&quot;&#13;&#10;  WHEN &quot;North Dakota&quot;  THEN &quot;Plains&quot;&#13;&#10;  WHEN &quot;South Dakota&quot;  THEN &quot;Plains&quot;&#13;&#10;&#13;&#10;  // ä¸å Southeast&#13;&#10;  WHEN &quot;Alabama&quot;         THEN &quot;Southeast&quot;&#13;&#10;  WHEN &quot;Arkansas&quot;        THEN &quot;Southeast&quot;&#13;&#10;  WHEN &quot;Florida&quot;         THEN &quot;Southeast&quot;&#13;&#10;  WHEN &quot;Georgia&quot;         THEN &quot;Southeast&quot;&#13;&#10;  WHEN &quot;Kentucky&quot;        THEN &quot;Southeast&quot;&#13;&#10;  WHEN &quot;Louisiana&quot;       THEN &quot;Southeast&quot;&#13;&#10;  WHEN &quot;Mississippi&quot;     THEN &quot;Southeast&quot;&#13;&#10;  WHEN &quot;North Carolina&quot;  THEN &quot;Southeast&quot;&#13;&#10;  WHEN &quot;South Carolina&quot;  THEN &quot;Southeast&quot;&#13;&#10;  WHEN &quot;Tennessee&quot;       THEN &quot;Southeast&quot;&#13;&#10;  WHEN &quot;Virginia&quot;        THEN &quot;Southeast&quot;&#13;&#10;  WHEN &quot;West Virginia&quot;   THEN &quot;Southeast&quot;&#13;&#10;&#13;&#10;  // è¥¿å Southwest&#13;&#10;  WHEN &quot;Arizona&quot;     THEN &quot;Southwest&quot;&#13;&#10;  WHEN &quot;New Mexico&quot;  THEN &quot;Southwest&quot;&#13;&#10;  WHEN &quot;Oklahoma&quot;    THEN &quot;Southwest&quot;&#13;&#10;  WHEN &quot;Texas&quot;       THEN &quot;Southwest&quot;&#13;&#10;&#13;&#10;  // è½åºå±± Rocky Mountain&#13;&#10;  WHEN &quot;Colorado&quot;   THEN &quot;Rocky Mountain&quot;&#13;&#10;  WHEN &quot;Idaho&quot;      THEN &quot;Rocky Mountain&quot;&#13;&#10;  WHEN &quot;Montana&quot;    THEN &quot;Rocky Mountain&quot;&#13;&#10;  WHEN &quot;Utah&quot;       THEN &quot;Rocky Mountain&quot;&#13;&#10;  WHEN &quot;Wyoming&quot;    THEN &quot;Rocky Mountain&quot;&#13;&#10;&#13;&#10;  // è¿è¥¿ Far West&#13;&#10;  WHEN &quot;Alaska&quot;       THEN &quot;Far West&quot;&#13;&#10;  WHEN &quot;California&quot;   THEN &quot;Far West&quot;&#13;&#10;  WHEN &quot;Hawaii&quot;       THEN &quot;Far West&quot;&#13;&#10;  WHEN &quot;Nevada&quot;       THEN &quot;Far West&quot;&#13;&#10;  WHEN &quot;Oregon&quot;       THEN &quot;Far West&quot;&#13;&#10;  WHEN &quot;Washington&quot;   THEN &quot;Far West&quot;&#13;&#10;&#13;&#10;  ELSE &quot;Unknown&quot;&#13;&#10;END' />
            </column>
            <column caption='Calculation2' datatype='string' name='[Calculation_-6271262479209385983]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF INDEX() &lt;= 2 THEN&#13;&#10;  &quot;Top 2&quot;&#13;&#10;ELSEIF INDEX() &gt; SIZE() - 2 THEN&#13;&#10;  &quot;Bottom 2&quot;&#13;&#10;ELSE&#13;&#10;  &quot;Other&quot;&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' name='[GDP (in billions USD)]' role='measure' type='quantitative' />
            <column caption='Insurance Cost Monthly USD' datatype='integer' name='[Insurance_Cost_Monthly_USD]' role='measure' type='quantitative' />
            <column caption='Per Capita GDP USD' datatype='real' name='[Per_Capita_GDP_USD]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_-6271262479191150583]' derivation='None' name='[none:Calculation_-6271262479191150583:nk]' pivot='key' type='nominal' />
            <column-instance column='[AQI_Score]' derivation='Sum' name='[sum:AQI_Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_-6271262479191019510]' derivation='Sum' name='[sum:Calculation_-6271262479191019510:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_-6271262479209385983]' derivation='User' name='[usr:Calculation_-6271262479209385983:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[sum:AQI_Score:qk]&quot;' user:op='manual' />
          </filter>
          <computed-sort column='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[none:Calculation_-6271262479191150583:nk]' direction='DESC' using='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[sum:Calculation_-6271262479191019510:qk]' />
          <slices>
            <column>[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[sum:Calculation_-6271262479191019510:qk]' scope='cols' value='Insurance Cost' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-size' field='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[sum:Calculation_-6271262479191019510:qk]' value='20' />
            <format attr='font-size' field='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[none:Calculation_-6271262479191150583:nk]' value='20' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='44' />
            <format attr='font-size' data-class='subtotal' field='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[none:Calculation_-6271262479191150583:nk]' value='20' />
            <format attr='width' field='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[none:Calculation_-6271262479191150583:nk]' value='188' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='18' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[sum:Calculation_-6271262479191019510:qk]' value='20' />
            <format attr='font-weight' field='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[none:Calculation_-6271262479191150583:nk]' value='bold' />
            <format attr='font-size' field='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[none:Calculation_-6271262479191150583:nk]' value='18' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-size' id='refline0' value='4' />
            <format attr='stroke-color' id='refline0' value='#b07aa1a7' />
            <format attr='font-size' id='refline0' value='20' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='16' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='20' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[usr:Calculation_-6271262479209385983:nk:1]' />
            </encodings>
            <reference-line axis-column='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[sum:Calculation_-6271262479191019510:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[sum:Calculation_-6271262479191019510:qk]' z-order='1' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>DIM:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[none:Calculation_-6271262479191150583:nk]>]]></run>
                <run>Ã&#10;</run>
                <run fontcolor='#757575'>Metric Value:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[sum:Calculation_-6271262479191019510:qk]>]]></run>
                <run>Ã&#10;</run>
                <run fontcolor='#757575'>Calculation2 along Table (Down):	</run>
                <run bold='true'><![CDATA[<[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[usr:Calculation_-6271262479209385983:nk:1]>]]></run>
                <run>Ã&#10;</run>
                <run bold='true'><![CDATA[State: <[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[none:State:nk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='16' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[none:Calculation_-6271262479191150583:nk]</rows>
        <cols>[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[sum:Calculation_-6271262479191019510:qk]</cols>
      </table>
      <simple-id uuid='{A09D7867-18CC-4B31-90B6-E6EF85918DC9}' />
    </worksheet>
    <worksheet name='Region'>
      <table>
        <view>
          <datasources>
            <datasource caption='State_GDP__Population__Per_Capita_GDP__AQI__and_Insurance_Cost' name='federated.0xy54ma1y3vn6110mfa6x0qt4i3z' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0xy54ma1y3vn6110mfa6x0qt4i3z'>
            <column caption='Region' datatype='string' name='[Calculation_-6271262479191449593]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// è®¡ç®å­æ®µåç§°ï¼Region&#13;&#10;CASE [State]&#13;&#10;  // æ°è±æ ¼å° New England&#13;&#10;  WHEN &quot;Connecticut&quot;    THEN &quot;New England&quot;&#13;&#10;  WHEN &quot;Maine&quot;          THEN &quot;New England&quot;&#13;&#10;  WHEN &quot;Massachusetts&quot;  THEN &quot;New England&quot;&#13;&#10;  WHEN &quot;New Hampshire&quot;  THEN &quot;New England&quot;&#13;&#10;  WHEN &quot;Rhode Island&quot;   THEN &quot;New England&quot;&#13;&#10;  WHEN &quot;Vermont&quot;        THEN &quot;New England&quot;&#13;&#10;&#13;&#10;  // ä¸­å¤§è¥¿æ´ Mideast&#13;&#10;  WHEN &quot;Delaware&quot;               THEN &quot;Mideast&quot;&#13;&#10;  WHEN &quot;District of Columbia&quot;   THEN &quot;Mideast&quot;&#13;&#10;  WHEN &quot;Maryland&quot;               THEN &quot;Mideast&quot;&#13;&#10;  WHEN &quot;New Jersey&quot;             THEN &quot;Mideast&quot;&#13;&#10;  WHEN &quot;New York&quot;               THEN &quot;Mideast&quot;&#13;&#10;  WHEN &quot;Pennsylvania&quot;           THEN &quot;Mideast&quot;&#13;&#10;&#13;&#10;  // ä¿äº¥ä¿æ²³-äºå¤§æ¹ Great Lakes&#13;&#10;  WHEN &quot;Illinois&quot;   THEN &quot;Great Lakes&quot;&#13;&#10;  WHEN &quot;Indiana&quot;    THEN &quot;Great Lakes&quot;&#13;&#10;  WHEN &quot;Michigan&quot;   THEN &quot;Great Lakes&quot;&#13;&#10;  WHEN &quot;Ohio&quot;       THEN &quot;Great Lakes&quot;&#13;&#10;  WHEN &quot;Wisconsin&quot;  THEN &quot;Great Lakes&quot;&#13;&#10;&#13;&#10;  // å¹³å Plains&#13;&#10;  WHEN &quot;Iowa&quot;          THEN &quot;Plains&quot;&#13;&#10;  WHEN &quot;Kansas&quot;        THEN &quot;Plains&quot;&#13;&#10;  WHEN &quot;Minnesota&quot;     THEN &quot;Plains&quot;&#13;&#10;  WHEN &quot;Missouri&quot;      THEN &quot;Plains&quot;&#13;&#10;  WHEN &quot;Nebraska&quot;      THEN &quot;Plains&quot;&#13;&#10;  WHEN &quot;North Dakota&quot;  THEN &quot;Plains&quot;&#13;&#10;  WHEN &quot;South Dakota&quot;  THEN &quot;Plains&quot;&#13;&#10;&#13;&#10;  // ä¸å Southeast&#13;&#10;  WHEN &quot;Alabama&quot;         THEN &quot;Southeast&quot;&#13;&#10;  WHEN &quot;Arkansas&quot;        THEN &quot;Southeast&quot;&#13;&#10;  WHEN &quot;Florida&quot;         THEN &quot;Southeast&quot;&#13;&#10;  WHEN &quot;Georgia&quot;         THEN &quot;Southeast&quot;&#13;&#10;  WHEN &quot;Kentucky&quot;        THEN &quot;Southeast&quot;&#13;&#10;  WHEN &quot;Louisiana&quot;       THEN &quot;Southeast&quot;&#13;&#10;  WHEN &quot;Mississippi&quot;     THEN &quot;Southeast&quot;&#13;&#10;  WHEN &quot;North Carolina&quot;  THEN &quot;Southeast&quot;&#13;&#10;  WHEN &quot;South Carolina&quot;  THEN &quot;Southeast&quot;&#13;&#10;  WHEN &quot;Tennessee&quot;       THEN &quot;Southeast&quot;&#13;&#10;  WHEN &quot;Virginia&quot;        THEN &quot;Southeast&quot;&#13;&#10;  WHEN &quot;West Virginia&quot;   THEN &quot;Southeast&quot;&#13;&#10;&#13;&#10;  // è¥¿å Southwest&#13;&#10;  WHEN &quot;Arizona&quot;     THEN &quot;Southwest&quot;&#13;&#10;  WHEN &quot;New Mexico&quot;  THEN &quot;Southwest&quot;&#13;&#10;  WHEN &quot;Oklahoma&quot;    THEN &quot;Southwest&quot;&#13;&#10;  WHEN &quot;Texas&quot;       THEN &quot;Southwest&quot;&#13;&#10;&#13;&#10;  // è½åºå±± Rocky Mountain&#13;&#10;  WHEN &quot;Colorado&quot;   THEN &quot;Rocky Mountain&quot;&#13;&#10;  WHEN &quot;Idaho&quot;      THEN &quot;Rocky Mountain&quot;&#13;&#10;  WHEN &quot;Montana&quot;    THEN &quot;Rocky Mountain&quot;&#13;&#10;  WHEN &quot;Utah&quot;       THEN &quot;Rocky Mountain&quot;&#13;&#10;  WHEN &quot;Wyoming&quot;    THEN &quot;Rocky Mountain&quot;&#13;&#10;&#13;&#10;  // è¿è¥¿ Far West&#13;&#10;  WHEN &quot;Alaska&quot;       THEN &quot;Far West&quot;&#13;&#10;  WHEN &quot;California&quot;   THEN &quot;Far West&quot;&#13;&#10;  WHEN &quot;Hawaii&quot;       THEN &quot;Far West&quot;&#13;&#10;  WHEN &quot;Nevada&quot;       THEN &quot;Far West&quot;&#13;&#10;  WHEN &quot;Oregon&quot;       THEN &quot;Far West&quot;&#13;&#10;  WHEN &quot;Washington&quot;   THEN &quot;Far West&quot;&#13;&#10;&#13;&#10;  ELSE &quot;Unknown&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_-6271262479191449593]' derivation='None' name='[none:Calculation_-6271262479191449593:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[none:Calculation_-6271262479191449593:nk]'>
            <groupfilter function='member' level='[none:Calculation_-6271262479191449593:nk]' member='&quot;Far West&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[none:Calculation_-6271262479191449593:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[Longitude (generated)]' field-type='quantitative' max='35848081.995994836' min='23506446.755812585' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[Latitude (generated)]' field-type='quantitative' max='6349724.4815005008' min='2598762.3693778459' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='admin-1-label-9th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-8th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-7th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-6th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-5th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-4th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-3rd-tier' value='false' />
            <format attr='enabled' id='admin-1-label-2nd-tier' value='false' />
            <format attr='enabled' id='admin-1-label-1st-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-3rd-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-2nd-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-1st-tier' value='false' />
            <format attr='enabled' id='admin-0-label-5th-tier' value='false' />
            <format attr='enabled' id='admin-0-label-4th-tier' value='false' />
            <format attr='enabled' id='admin-0-label-3rd-tier' value='false' />
            <format attr='enabled' id='admin-0-label-2nd-tier' value='false' />
            <format attr='enabled' id='admin-0-label-1st-tier' value='false' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='light' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <text column='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[none:State:nk]' />
              <lod column='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[none:State:nk]' />
              <geometry column='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[none:Calculation_-6271262479191449593:nk] * [federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[Latitude (generated)])</rows>
        <cols>[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{02B8BECC-9D55-4BD4-839D-5255DFB71868}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='State_GDP__Population__Per_Capita_GDP__AQI__and_Insurance_Cost' name='federated.0xy54ma1y3vn6110mfa6x0qt4i3z' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Value' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Insurance Cost&quot;'>
          <calculation class='tableau' formula='&quot;Insurance Cost&quot;' />
          <members>
            <member value='&quot;GDP&quot;' />
            <member value='&quot;Per Capita GDP&quot;' />
            <member value='&quot;AQI&quot;' />
            <member value='&quot;Insurance Cost&quot;' />
          </members>
        </column>
        <column caption='Select Level' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Region&quot;'>
          <calculation class='tableau' formula='&quot;Region&quot;' />
          <members>
            <member value='&quot;State&quot;' />
            <member value='&quot;Region&quot;' />
          </members>
        </column>
        <column caption='Select Metric' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Insurance Cost&quot;'>
          <calculation class='tableau' formula='&quot;Insurance Cost&quot;' />
          <members>
            <member value='&quot;GDP&quot;' />
            <member value='&quot;Per Capita GDP&quot;' />
            <member value='&quot;AQI&quot;' />
            <member value='&quot;Insurance Cost&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0xy54ma1y3vn6110mfa6x0qt4i3z'>
        <column caption='Region' datatype='string' name='[Calculation_-6271262479191449593]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='// è®¡ç®å­æ®µåç§°ï¼Region&#13;&#10;CASE [State]&#13;&#10;  // æ°è±æ ¼å° New England&#13;&#10;  WHEN &quot;Connecticut&quot;    THEN &quot;New England&quot;&#13;&#10;  WHEN &quot;Maine&quot;          THEN &quot;New England&quot;&#13;&#10;  WHEN &quot;Massachusetts&quot;  THEN &quot;New England&quot;&#13;&#10;  WHEN &quot;New Hampshire&quot;  THEN &quot;New England&quot;&#13;&#10;  WHEN &quot;Rhode Island&quot;   THEN &quot;New England&quot;&#13;&#10;  WHEN &quot;Vermont&quot;        THEN &quot;New England&quot;&#13;&#10;&#13;&#10;  // ä¸­å¤§è¥¿æ´ Mideast&#13;&#10;  WHEN &quot;Delaware&quot;               THEN &quot;Mideast&quot;&#13;&#10;  WHEN &quot;District of Columbia&quot;   THEN &quot;Mideast&quot;&#13;&#10;  WHEN &quot;Maryland&quot;               THEN &quot;Mideast&quot;&#13;&#10;  WHEN &quot;New Jersey&quot;             THEN &quot;Mideast&quot;&#13;&#10;  WHEN &quot;New York&quot;               THEN &quot;Mideast&quot;&#13;&#10;  WHEN &quot;Pennsylvania&quot;           THEN &quot;Mideast&quot;&#13;&#10;&#13;&#10;  // ä¿äº¥ä¿æ²³-äºå¤§æ¹ Great Lakes&#13;&#10;  WHEN &quot;Illinois&quot;   THEN &quot;Great Lakes&quot;&#13;&#10;  WHEN &quot;Indiana&quot;    THEN &quot;Great Lakes&quot;&#13;&#10;  WHEN &quot;Michigan&quot;   THEN &quot;Great Lakes&quot;&#13;&#10;  WHEN &quot;Ohio&quot;       THEN &quot;Great Lakes&quot;&#13;&#10;  WHEN &quot;Wisconsin&quot;  THEN &quot;Great Lakes&quot;&#13;&#10;&#13;&#10;  // å¹³å Plains&#13;&#10;  WHEN &quot;Iowa&quot;          THEN &quot;Plains&quot;&#13;&#10;  WHEN &quot;Kansas&quot;        THEN &quot;Plains&quot;&#13;&#10;  WHEN &quot;Minnesota&quot;     THEN &quot;Plains&quot;&#13;&#10;  WHEN &quot;Missouri&quot;      THEN &quot;Plains&quot;&#13;&#10;  WHEN &quot;Nebraska&quot;      THEN &quot;Plains&quot;&#13;&#10;  WHEN &quot;North Dakota&quot;  THEN &quot;Plains&quot;&#13;&#10;  WHEN &quot;South Dakota&quot;  THEN &quot;Plains&quot;&#13;&#10;&#13;&#10;  // ä¸å Southeast&#13;&#10;  WHEN &quot;Alabama&quot;         THEN &quot;Southeast&quot;&#13;&#10;  WHEN &quot;Arkansas&quot;        THEN &quot;Southeast&quot;&#13;&#10;  WHEN &quot;Florida&quot;         THEN &quot;Southeast&quot;&#13;&#10;  WHEN &quot;Georgia&quot;         THEN &quot;Southeast&quot;&#13;&#10;  WHEN &quot;Kentucky&quot;        THEN &quot;Southeast&quot;&#13;&#10;  WHEN &quot;Louisiana&quot;       THEN &quot;Southeast&quot;&#13;&#10;  WHEN &quot;Mississippi&quot;     THEN &quot;Southeast&quot;&#13;&#10;  WHEN &quot;North Carolina&quot;  THEN &quot;Southeast&quot;&#13;&#10;  WHEN &quot;South Carolina&quot;  THEN &quot;Southeast&quot;&#13;&#10;  WHEN &quot;Tennessee&quot;       THEN &quot;Southeast&quot;&#13;&#10;  WHEN &quot;Virginia&quot;        THEN &quot;Southeast&quot;&#13;&#10;  WHEN &quot;West Virginia&quot;   THEN &quot;Southeast&quot;&#13;&#10;&#13;&#10;  // è¥¿å Southwest&#13;&#10;  WHEN &quot;Arizona&quot;     THEN &quot;Southwest&quot;&#13;&#10;  WHEN &quot;New Mexico&quot;  THEN &quot;Southwest&quot;&#13;&#10;  WHEN &quot;Oklahoma&quot;    THEN &quot;Southwest&quot;&#13;&#10;  WHEN &quot;Texas&quot;       THEN &quot;Southwest&quot;&#13;&#10;&#13;&#10;  // è½åºå±± Rocky Mountain&#13;&#10;  WHEN &quot;Colorado&quot;   THEN &quot;Rocky Mountain&quot;&#13;&#10;  WHEN &quot;Idaho&quot;      THEN &quot;Rocky Mountain&quot;&#13;&#10;  WHEN &quot;Montana&quot;    THEN &quot;Rocky Mountain&quot;&#13;&#10;  WHEN &quot;Utah&quot;       THEN &quot;Rocky Mountain&quot;&#13;&#10;  WHEN &quot;Wyoming&quot;    THEN &quot;Rocky Mountain&quot;&#13;&#10;&#13;&#10;  // è¿è¥¿ Far West&#13;&#10;  WHEN &quot;Alaska&quot;       THEN &quot;Far West&quot;&#13;&#10;  WHEN &quot;California&quot;   THEN &quot;Far West&quot;&#13;&#10;  WHEN &quot;Hawaii&quot;       THEN &quot;Far West&quot;&#13;&#10;  WHEN &quot;Nevada&quot;       THEN &quot;Far West&quot;&#13;&#10;  WHEN &quot;Oregon&quot;       THEN &quot;Far West&quot;&#13;&#10;  WHEN &quot;Washington&quot;   THEN &quot;Far West&quot;&#13;&#10;&#13;&#10;  ELSE &quot;Unknown&quot;&#13;&#10;END' />
        </column>
        <column-instance column='[Calculation_-6271262479191449593]' derivation='None' name='[none:Calculation_-6271262479191449593:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='3' name='Overview (2)' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='12' name='Region' show-title='false' w='82400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='16625' id='8' name='Overview (2)' pane-specification-id='0' param='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[usr:Calculation_-6271262479209385983:nk:1]' type-v2='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='9' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='16000' x='83200' y='17625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='10' mode='compact' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='16000' x='83200' y='24125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='11' mode='compact' param='[Parameters].[Parameter 3]' type-v2='paramctrl' w='16000' x='83200' y='30625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='25375' id='13' name='Region' param='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[none:Calculation_-6271262479191449593:nk]' type-v2='filter' w='16000' x='83200' y='37125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout active='true' name='Desktop'>
          <size sizing-mode='automatic' />
          <zones>
            <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98518' id='7' param='horz' type-v2='layout-flow' w='99166' x='417' y='741'>
                <zone h='98518' id='5' type-v2='layout-basic' w='90833' x='417' y='741'>
                  <zone h='56574' id='3' name='Overview (2)' w='90833' x='417' y='741'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='41944' id='12' name='Region' show-title='false' w='90833' x='417' y='57315'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone fixed-size='160' h='98518' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='8333' x='91250' y='741'>
                  <zone h='12315' id='8' name='Overview (2)' pane-specification-id='0' param='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[usr:Calculation_-6271262479209385983:nk:1]' type-v2='color' w='8333' x='91250' y='741'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='4815' id='9' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='8333' x='91250' y='13056'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='4815' id='10' mode='compact' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='8333' x='91250' y='17871'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='4815' id='11' mode='compact' param='[Parameters].[Parameter 3]' type-v2='paramctrl' w='8333' x='91250' y='22686'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='18797' id='13' name='Region' param='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[none:Calculation_-6271262479191449593:nk]' type-v2='filter' w='8333' x='91250' y='27501'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='17' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='16' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Overview (2)' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='16625' id='8' name='Overview (2)' pane-specification-id='0' param='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[usr:Calculation_-6271262479209385983:nk:1]' type-v2='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='9' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='16000' x='83200' y='17625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='10' mode='compact' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='16000' x='83200' y='24125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='11' mode='compact' param='[Parameters].[Parameter 3]' type-v2='paramctrl' w='16000' x='83200' y='30625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='25375' id='13' mode='checkdropdown' name='Region' param='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[none:Calculation_-6271262479191449593:nk]' type-v2='filter' w='16000' x='83200' y='37125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='12' is-fixed='true' name='Region' show-title='false' w='82400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D95353FB-7566-4D24-B418-2483B55FA0A4}' />
    </dashboard>
  </dashboards>
  <windows show-side-pane='false' source-height='30'>
    <window class='worksheet' maximized='true' name='Overview'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' size='27' type='parameter' />
            <card pane-specification-id='0' param='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[usr:Calculation_-6271262479209385983:nk:1]' size='61' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[none:Calculation_-6271262479207034878:nk]</field>
            <field>[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[none:State:nk]</field>
            <field>[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[usr:Calculation_-6271262479209385983:nk:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{13C88226-C231-4CFB-A4DD-5E1D3076D9C3}' />
    </window>
    <window class='worksheet' name='Overview (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
            <card pane-specification-id='0' param='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[usr:Calculation_-6271262479209385983:nk:1]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[none:Calculation_-6271262479191449593:nk]</field>
            <field>[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[none:Calculation_-6271262479207034878:nk]</field>
            <field>[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[none:Calculation_-6271262479212281856:qk]</field>
            <field>[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[none:State:nk]</field>
            <field>[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[usr:Calculation_-6271262479209385983:nk:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B3A2F86C-C264-438A-B79A-577F142F01A8}' />
    </window>
    <window class='worksheet' name='In vs Cap'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[none:State:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DCA83D76-AA85-46A2-A3E0-65A87D0FF25F}' />
    </window>
    <window class='worksheet' name='AQI vs Cap'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[none:AdhocCluster:1:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[none:AdhocCluster:1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2F44CD33-693F-43B2-A09D-DC542F2E2515}' />
    </window>
    <window class='worksheet' name='Region'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[none:Calculation_-6271262479191449593:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[none:Calculation_-6271262479191449593:nk]</field>
            <field>[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[none:State:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
        <default-map-unit-selection mapunit='2' />
      </viewpoint>
      <simple-id uuid='{3A3CEB26-F813-4EC6-B3B5-02135158701C}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Overview (2)'>
          <highlight>
            <color-one-way>
              <field>[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[usr:Calculation_-6271262479209385983:nk:1]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Region'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{6E01068D-F46B-42C9-9C57-4773D4F83ABB}' />
    </window>
  </windows>
  <datagraph>
    <graph>
      <properties>
        <default-execution-subgraph-guid value='c4a71a9c-8fd7-449c-b805-395f78f2b67b' />
      </properties>
      <node-execution-subgraphs>
        <pair execution-subgraph-guid='c4a71a9c-8fd7-449c-b805-395f78f2b67b' node-guid='66f6e8ee-d479-4859-9288-5e12c9fa18a2' />
        <pair execution-subgraph-guid='c4a71a9c-8fd7-449c-b805-395f78f2b67b' node-guid='bd00c245-16ca-483e-b26a-97a46941f67c' />
        <pair execution-subgraph-guid='c4a71a9c-8fd7-449c-b805-395f78f2b67b' node-guid='65672e58-a17f-4419-99fa-3f421ae809d5' />
        <pair execution-subgraph-guid='c4a71a9c-8fd7-449c-b805-395f78f2b67b' node-guid='5c39da58-0a39-495e-83c4-40eba16078ce' />
      </node-execution-subgraphs>
      <nodes>
        <single-value-field-node fieldname='[Parameters].[Parameter 1]' fieldname-input-guid='78c9c5dc-39c9-4b8a-bd99-2d88b36274f4' node-guid='bd00c245-16ca-483e-b26a-97a46941f67c' value-output-guid='abc81770-95d7-409f-9960-2d99d9fafbb6' />
        <single-value-field-node fieldname='[Parameters].[Parameter 3]' fieldname-input-guid='aa0ed543-ef67-46cb-9fb8-f0347940e264' node-guid='66f6e8ee-d479-4859-9288-5e12c9fa18a2' value-output-guid='f4b80f81-a6da-4b54-8762-01f1f3bc4c56' />
        <_.fcp.DatagraphNodeAxisTitle.true...axis-title-node duplicate-index='0' fieldname='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[sum:Calculation_-6271262479212281856:qk]' node-guid='65672e58-a17f-4419-99fa-3f421ae809d5' orientation='horizontal' sheet-identifier='{DB51ED47-22D6-45DA-B05E-4237B57F14F8}' title-input-guid='ce5bc417-0698-48d5-9e76-0450cecfb589' />
        <_.fcp.DatagraphNodeAxisTitle.true...axis-title-node duplicate-index='0' fieldname='[federated.0xy54ma1y3vn6110mfa6x0qt4i3z].[sum:Calculation_-6271262479191019510:qk]' node-guid='5c39da58-0a39-495e-83c4-40eba16078ce' orientation='horizontal' sheet-identifier='{A09D7867-18CC-4B31-90B6-E6EF85918DC9}' title-input-guid='3903f610-2490-4bc1-87d8-62927661186c' />
      </nodes>
      <edges>
        <edge from='abc81770-95d7-409f-9960-2d99d9fafbb6' to='ce5bc417-0698-48d5-9e76-0450cecfb589' />
        <edge from='f4b80f81-a6da-4b54-8762-01f1f3bc4c56' to='3903f610-2490-4bc1-87d8-62927661186c' />
      </edges>
      <pin-values />
    </graph>
  </datagraph>
  <thumbnails>
    <thumbnail height='192' name='AQI vs Cap' width='192'>
      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
      oW3uSAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='In vs Cap' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Overview' width='192'>
      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
      fwFSo4AfSC7AHQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Overview (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Region' width='192'>
      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
      4xROzVMAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
